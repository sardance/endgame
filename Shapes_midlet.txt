import javax.microedition.midlet.*;
import javax.microedition.lcdui.*;

public class test extends MIDlet implements CommandListener {
	private Display display;
	private List list;
	private Command ok, exit;
	public CanvasDraw canvas;
	int index;

	public test() {
		canvas = new CanvasDraw();
		display = Display.getDisplay(this);
		list = new List("Shapes", List.IMPLICIT);
		ok = new Command("Draw", Command.OK, 2);
		exit = new Command("Exit", Command.EXIT, 2);
		list.append("Draw line", null);
		list.append("Draw rect", null);
		list.append("Draw round rect", null);
		list.append("Draw circle", null);
		list.append("Draw triangle", null);
		list.addCommand(ok);
		list.addCommand(exit);
		list.setCommandListener(this);
	}

	public void startApp(){
		display.setCurrent(list);
	}

	public void pauseApp() {}

	public void destroyApp(boolean unconditional) {
		notifyDestroyed();
	}

	public void commandAction(Command c, Displayable d){
		index = list.getSelectedIndex();
		if(c == ok){
			display.setCurrent(canvas);
		}
		else if(c == exit){
			destroyApp(true);
		}
	}

	class CanvasDraw extends Canvas implements CommandListener {
		Command back;
		int width;
		int height;

		public CanvasDraw() {
			back = new Command("Back", Command.BACK, 1);
			addCommand(back);
			setCommandListener(this);
			width = getWidth();
			height = getHeight();
		}

		public void paint(Graphics g) {
			g.fillRect(0, 0, width, height);
			g.setColor(255, 0, 0);

			if(index == 0){
				g.drawString("Draw line", width/2, 5, Graphics.HCENTER | Graphics.TOP);
				g.drawLine(width/4, 100, 3 * width/4, 100);
			}
			if(index == 1){
				g.drawString("Draw rectangle", width/2, 5, Graphics.HCENTER | Graphics.TOP);
				g.fillRect(width/4, 100, width/2, 40);
			}

			if(index == 2){
				g.drawString("Draw roundrect", width/2, 5, Graphics.HCENTER | Graphics.TOP);
				g.fillRoundRect(width/4, 100, width/2, 40,20,20);
			}

			if(index == 3){
				g.drawString("Draw circle", width/2, 5, Graphics.HCENTER | Graphics.TOP);
				g.fillArc(width/4,100,100,100,0,360);
			}
			if(index == 4){
				g.drawString("Draw triangle", width/2, 5, Graphics.HCENTER | Graphics.TOP);
				g.fillTriangle(width/4,100,50,50,3*width/4,100);
			}
		}

		public void commandAction(Command c, Displayable d){
			if(c == back){
				display.setCurrent(list);
			}
		}
	}
}